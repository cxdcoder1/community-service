<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.community.dao.ZyBuildingDao">

    <resultMap type="com.example.community.entity.ZyBuilding" id="ZyBuildingMap">
        <result property="buildingId" column="building_id" jdbcType="INTEGER"/>
        <result property="buildingName" column="building_name" jdbcType="VARCHAR"/>
        <result property="buildingCode" column="building_code" jdbcType="VARCHAR"/>
        <result property="buildingAcreage" column="building_acreage" jdbcType="NUMERIC"/>
        <result property="communityId" column="community_id" jdbcType="INTEGER"/>
        <result property="createBy" column="create_by" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateBy" column="update_by" jdbcType="VARCHAR"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="remark" column="remark" jdbcType="VARCHAR"/>
    </resultMap>

    <!-- 批量插入 -->
    <insert id="insertBatch" keyProperty="" useGeneratedKeys="true">
        insert into zy-community.zy_building(building_id, building_name, building_code, building_acreage, community_id,
        create_by, create_time, update_by, update_time, remark)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.buildingId}, #{entity.buildingName}, #{entity.buildingCode}, #{entity.buildingAcreage},
            #{entity.communityId}, #{entity.createBy}, #{entity.createTime}, #{entity.updateBy}, #{entity.updateTime},
            #{entity.remark})
        </foreach>
    </insert>

    <select id="selectName" resultType="com.example.community.entity.ZyBuilding">
         select * from zy_building where community_id=#{id}
    </select>

    <select id="selectNames" resultType="com.example.community.entity.ZyBuilding">
        select * from zy_building where community_id in
        <foreach collection="id" item="num" index="index" open="(" close=")" separator=",">
            #{num}
        </foreach>
    </select>

    <!-- 批量插入或按主键更新 -->
    <insert id="insertOrUpdateBatch" keyProperty="" useGeneratedKeys="true">
        insert into zy-community.zy_building(building_id, building_name, building_code, building_acreage, community_id,
        create_by, create_time, update_by, update_time, remark)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.buildingId}, #{entity.buildingName}, #{entity.buildingCode}, #{entity.buildingAcreage},
            #{entity.communityId}, #{entity.createBy}, #{entity.createTime}, #{entity.updateBy}, #{entity.updateTime},
            #{entity.remark})
        </foreach>
        on duplicate key update
        building_id = values(building_id) , building_name = values(building_name) , building_code =
        values(building_code) , building_acreage = values(building_acreage) , community_id = values(community_id) ,
        create_by = values(create_by) , create_time = values(create_time) , update_by = values(update_by) , update_time
        = values(update_time) , remark = values(remark)
    </insert>
    <insert id="addBuilding">
        insert into zy_building
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="buildingCode != null">building_Code,</if>
            <if test="buildingId != null">building_id,</if>
            <if test="buildingName != null">building_name,</if>
            <if test="buildingAcreage != null">building_acreage,</if>
            <if test="communityId != null">community_id,</if>
            <if test="remark != null">remark,</if>
        </trim>
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="buildingCode != null">#{buildingCode},</if>
            <if test="buildingId != null">#{buildingId},</if>
            <if test="buildingName != null">#{buildingName},</if>
            <if test="buildingAcreage != null">#{buildingAcreage},</if>
            <if test="communityId != null">#{communityId},</if>
            <if test="remark != null">#{remark},</if>
        </trim>
    </insert>
    <update id="updateBuilding" parameterType="com.example.community.entity.ZyBuilding">
        UPDATE zy_building
        SET
        <trim prefix="" suffixOverrides=",">
            <if test="buildingName != null and buildingName != ''">building_name = #{buildingName},</if>
            <if test="buildingAcreage != null and buildingAcreage != ''">building_acreage = #{buildingAcreage},</if>
            <if test="remark != null">remark = #{remark}</if>
        </trim>
        WHERE building_id = #{buildingId}
    </update>
    <delete id="delBuilding">
        delete from zy_building where building_id=#{id}
    </delete>
    <delete id="deletesBuilding">
        delete from zy_building where building_id in
        <foreach collection="ids" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>
    <select id="selectBuild" resultType="com.example.community.entity.ZyBuilding">
        select * from zy_building
        <where>
            <if test="zyBuilding.buildingName != null and zyBuilding.buildingName != ''">
                and building_name LIKE CONCAT('%', #{zyBuilding.buildingName}, '%')
            </if>
            <if test="zyBuilding.buildingCode != null and zyBuilding.buildingCode != ''">
                and building_code LIKE CONCAT('%', #{zyBuilding.buildingCode}, '%')
            </if>
            and community_id=#{id}
        </where>
        limit #{index},#{size}
    </select>
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*) FROM zy_building
        <where>
            <if test="zyBuilding.buildingName != null and zyBuilding.buildingName != ''">
                AND building_name LIKE CONCAT('%', #{zyBuilding.buildingName}, '%')
            </if>
            <if test="zyBuilding.buildingCode != null and zyBuilding.buildingCode != ''">
                AND building_code LIKE CONCAT('%', #{zyBuilding.buildingCode}, '%')
            </if>
            AND community_id=#{id}
        </where>
    </select>
    <select id="getBuildingName" resultType="java.lang.Long">
        select * from zy_building where building_name=#{buildingName} and community_id=#{communityId}
    </select>
    <select id="selBuildingName" resultType="java.lang.Long">
        select count(building_id) from zy_building
        <where>
            (building_name=#{buildingName })
            <if test="buildingId != null and buildingId != ''">
                and building_id!=#{buildingId}
            </if>
        </where>
    </select>
    <select id="getUnitName" resultType="java.lang.Long">
        select * from zy_unit where building_id=#{id}
    </select>
    <select id="getBuildingList" resultType="com.example.community.entity.ZyBuilding">
        SELECT * FROM zy_building WHERE building_id != 1
        <if test="list!=null">
            and
            building_id in
            <foreach collection="list" item="num" index="index" open="(" close=")" separator=",">
                #{num}
            </foreach>
        </if>
    </select>

    <select id="getUBuild" resultType="com.example.community.entity.ZyBuilding">
        select * from zy_building where community_id = #{communityId}
    </select>


</mapper>

