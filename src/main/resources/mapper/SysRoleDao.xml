<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.community.dao.SysRoleDao">


    <resultMap type="com.example.community.entity.SysRole" id="SysRoleMap">
        <result property="roleId" column="role_id" jdbcType="INTEGER"/>
        <result property="roleName" column="role_name" jdbcType="VARCHAR"/>
        <result property="roleKey" column="role_key" jdbcType="VARCHAR"/>
        <result property="roleSort" column="role_sort" jdbcType="INTEGER"/>
        <result property="dataScope" column="data_scope" jdbcType="VARCHAR"/>
        <result property="menuCheckStrictly" column="menu_check_strictly" jdbcType="INTEGER"/>
        <result property="deptCheckStrictly" column="dept_check_strictly" jdbcType="INTEGER"/>
        <result property="status" column="status" jdbcType="VARCHAR"/>
        <result property="delFlag" column="del_flag" jdbcType="VARCHAR"/>
        <result property="createBy" column="create_by" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateBy" column="update_by" jdbcType="VARCHAR"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="remark" column="remark" jdbcType="VARCHAR"/>
    </resultMap>

    <!-- 批量插入 -->
    <insert id="insertBatch" keyProperty="roleId" useGeneratedKeys="true">
        insert into zy-community.sys_role(role_name, role_key, role_sort, data_scope, menu_check_strictly,
        dept_check_strictly, status, del_flag, create_by, create_time, update_by, update_time, remark)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.roleName}, #{entity.roleKey}, #{entity.roleSort}, #{entity.dataScope},
            #{entity.menuCheckStrictly}, #{entity.deptCheckStrictly}, #{entity.status}, #{entity.delFlag},
            #{entity.createBy}, #{entity.createTime}, #{entity.updateBy}, #{entity.updateTime}, #{entity.remark})
        </foreach>
    </insert>
    <!-- 批量插入或按主键更新 -->
    <insert id="insertOrUpdateBatch" keyProperty="roleId" useGeneratedKeys="true">
        insert into zy-community.sys_role(role_name, role_key, role_sort, data_scope, menu_check_strictly,
        dept_check_strictly, status, del_flag, create_by, create_time, update_by, update_time, remark)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.roleName}, #{entity.roleKey}, #{entity.roleSort}, #{entity.dataScope},
            #{entity.menuCheckStrictly}, #{entity.deptCheckStrictly}, #{entity.status}, #{entity.delFlag},
            #{entity.createBy}, #{entity.createTime}, #{entity.updateBy}, #{entity.updateTime}, #{entity.remark})
        </foreach>
        on duplicate key update
        role_name = values(role_name) , role_key = values(role_key) , role_sort = values(role_sort) , data_scope =
        values(data_scope) , menu_check_strictly = values(menu_check_strictly) , dept_check_strictly =
        values(dept_check_strictly) , status = values(status) , del_flag = values(del_flag) , create_by =
        values(create_by) , create_time = values(create_time) , update_by = values(update_by) , update_time =
        values(update_time) , remark = values(remark)
    </insert>
    <update id="deleteRole">
        update sys_role SET del_flag = 2 WHERE role_id = ${roleId}
    </update>
    <delete id="deleteMenu">
        delete from sys_role_menu where role_id=#{roleId}
    </delete>


    <select id="selectRoleList" parameterType="com.example.community.entity.SysRole"
            resultMap="SysRoleMap">
        select * from sys_role
        <where>
            role_id != 1 and del_flag = '0'
            <if test="sysRole.roleName != null and sysRole.roleName !=''">
                and role_name like concat('%',#{sysRole.roleName},'%')
            </if>
            <if test="sysRole.roleKey != null and sysRole.roleKey !=''">
                and role_key like concat('%', #{sysRole.roleKey}, '%')
            </if>
            <if test="sysRole.status != null and sysRole.status !=''">
                and status = #{sysRole.status}
            </if>
            <if test="sysRole.createTime != null and sysRole.createTime !=''">
                and DATE_FORMAT(create_time, '%y%m%d') &gt;= DATE_FORMAT(#{sysRole.createTime}, '%y%m%d')
            </if>
            <if test="sysRole.updateTime != null and sysRole.updateTime !=''">
                and DATE_FORMAT(update_time, '%y%m%d') &lt;= DATE_FORMAT(#{sysRole.updateTime}, '%y%m%d')
            </if>
        </where>
        <if test='size != 0'>
            limit #{index},#{size}
        </if>

    </select>
    <select id="RoleList" resultType="com.example.community.entity.SysRole"></select>

    <insert id="insertRole" parameterType="com.example.community.entity.SysRole" useGeneratedKeys="true"
            keyProperty="roleId">
        insert into sys_role(
        <if test="roleName != null and roleName != ''">role_name,</if>
        <if test="roleKey != null and roleKey != ''">role_key,</if>
        <if test="roleSort != null and roleSort != ''">role_sort,</if>
        <if test="dataScope != null and dataScope != ''">data_scope,</if>
        <if test="menuCheckStrictly != null">menu_check_strictly,</if>
        <if test="deptCheckStrictly != null">dept_check_strictly,</if>
        <if test="status != null and status != ''">status,</if>
        <if test="remark != null and remark != ''">remark,</if>
        <if test="createBy != null and createBy != ''">create_by,</if>
        create_time
        )values(
        <if test="roleName != null and roleName != ''">#{roleName},</if>
        <if test="roleKey != null and roleKey != ''">#{roleKey},</if>
        <if test="roleSort != null and roleSort != ''">#{roleSort},</if>
        <if test="dataScope != null and dataScope != ''">#{dataScope},</if>
        <if test="menuCheckStrictly != null">#{menuCheckStrictly},</if>
        <if test="deptCheckStrictly != null">#{deptCheckStrictly},</if>
        <if test="status != null and status != ''">#{status},</if>
        <if test="remark != null and remark != ''">#{remark},</if>
        <if test="createBy != null and createBy != ''">#{createBy},</if>
        sysdate()
        )
    </insert>
    <insert id="addMenu">
        insert into sys_role_menu values(#{roleId},#{menuId})
    </insert>



    <update id="updateRole" parameterType="com.example.community.entity.SysRole">
        update sys_role
        <set>
            <if test="roleName != null and roleName != ''">role_name = #{roleName},</if>
            <if test="roleKey != null and roleKey != ''">role_key = #{roleKey},</if>
            <if test="roleSort != null and roleSort != ''">role_sort = #{roleSort},</if>
            <if test="dataScope != null and dataScope != ''">data_scope = #{dataScope},</if>
            <if test="menuCheckStrictly != null">menu_check_strictly = #{menuCheckStrictly},</if>
            <if test="deptCheckStrictly != null">dept_check_strictly = #{deptCheckStrictly},</if>
            <if test="status != null and status != ''">status = #{status},</if>
            <if test="remark != null">remark = #{remark},</if>
            <if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
            update_time = sysdate()
        </set>
        where role_id = #{roleId}
    </update>

    <update id="upDataStatus">
        update sys_role set status = #{status} where role_id = #{roleId}
    </update>


    <select id="getRoleMenuTreeselect" resultType="com.example.community.entity.SysMenu">
        select * from sys_menu
    </select>

    <select id="selectRoleById" resultType="com.example.community.entity.SysRole">
        select *
        from sys_role
        where role_id = #{id}
    </select>

    <select id="getDeriveList" resultType="com.example.community.entity.SysRole">
        SELECT * FROM sys_role  WHERE role_id != 1
        <if test="list!=null">
            and
            role_id in
            <foreach collection="list" item="num" index="index" open="(" close=")" separator=",">
                #{num}
            </foreach>
        </if>

    </select>
    <select id="selectRoleName" resultType="com.example.community.entity.SysRole">
        select *
        from sys_role
        where role_name = #{roleName}
    </select>

    <select id="getMenuIds" resultType="com.example.community.entity.SysRoleMenu">
        select menu_id from sys_role_menu where role_id=#{roleId}
    </select>

</mapper>

