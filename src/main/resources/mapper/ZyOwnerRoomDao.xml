<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.community.dao.ZyOwnerRoomDao">

    <resultMap type="com.example.community.entity.ZyOwnerRoom" id="ZyOwnerRoomMap">
        <result property="ownerRoomId" column="owner_room_id" jdbcType="INTEGER"/>
        <result property="communityId" column="community_id" jdbcType="INTEGER"/>
        <result property="buildingId" column="building_id" jdbcType="INTEGER"/>
        <result property="unitId" column="unit_id" jdbcType="INTEGER"/>
        <result property="roomId" column="room_id" jdbcType="INTEGER"/>
        <result property="ownerId" column="owner_id" jdbcType="INTEGER"/>
        <result property="ownerType" column="owner_type" jdbcType="VARCHAR"/>
        <result property="roomStatus" column="room_status" jdbcType="VARCHAR"/>
        <result property="createBy" column="create_by" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateBy" column="update_by" jdbcType="VARCHAR"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="remark" column="remark" jdbcType="VARCHAR"/>
    </resultMap>

    <!-- 批量插入 -->
    <insert id="insertBatch" keyProperty="ownerRoomId" useGeneratedKeys="true">
        insert into zy-community.zy_owner_room(community_id, building_id, unit_id, room_id, owner_id, owner_type,
        room_status, create_by, create_time, update_by, update_time, remark)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.communityId}, #{entity.buildingId}, #{entity.unitId}, #{entity.roomId}, #{entity.ownerId},
            #{entity.ownerType}, #{entity.roomStatus}, #{entity.createBy}, #{entity.createTime}, #{entity.updateBy},
            #{entity.updateTime}, #{entity.remark})
        </foreach>
    </insert>
    <!-- 批量插入或按主键更新 -->
    <insert id="insertOrUpdateBatch" keyProperty="ownerRoomId" useGeneratedKeys="true">
        insert into zy-community.zy_owner_room(community_id, building_id, unit_id, room_id, owner_id, owner_type,
        room_status, create_by, create_time, update_by, update_time, remark)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.communityId}, #{entity.buildingId}, #{entity.unitId}, #{entity.roomId}, #{entity.ownerId},
            #{entity.ownerType}, #{entity.roomStatus}, #{entity.createBy}, #{entity.createTime}, #{entity.updateBy},
            #{entity.updateTime}, #{entity.remark})
        </foreach>
        on duplicate key update
        community_id = values(community_id) , building_id = values(building_id) , unit_id = values(unit_id) , room_id =
        values(room_id) , owner_id = values(owner_id) , owner_type = values(owner_type) , room_status =
        values(room_status) , create_by = values(create_by) , create_time = values(create_time) , update_by =
        values(update_by) , update_time = values(update_time) , remark = values(remark)
    </insert>

    <insert id="insertRoom">
        INSERT INTO zy_owner_room (community_id, building_id, unit_id, room_id, owner_id, owner_type, room_status)
        VALUES
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="communityId != null">#{communityId},</if>
            <if test="buildingId != null">#{buildingId},</if>
            <if test="unitId != null">#{unitId},</if>
            <if test="roomId != null">#{roomId},</if>
            <if test="ownerId != null">#{ownerId},</if>
            <if test="ownerType != null">#{ownerType},</if>
            <if test="roomStatus != null">#{roomStatus},</if>
            <if test="createTime != null">#{createTime}</if>
        </trim>
    </insert>

    <update id="updOwnerRoom">
        update zy_owner_room set room_status = #{status} where owner_room_id=#{id}
    </update>


    <select id="getRoomAll" resultType="com.example.community.dto.OwnerRoomList">
        SELECT
        zt.community_name,
        zb.building_name,
        zu.unit_name,
        zm.room_name,
        zo.owner_real_name,
        zr.owner_room_id,
        zr.community_id,
        zr.building_id,
        zr.unit_id,
        zr.room_id,
        zr.owner_id,
        zr.owner_type,
        zr.room_status,
        zr.create_by,
        zr.create_time,
        zr.update_by,
        zr.update_time,
        zr.remark
        FROM zy_owner_room zr
        LEFT JOIN zy_community zt ON zr.community_id = zt.community_id
        LEFT JOIN zy_building zb ON zr.building_id = zb.building_id
        left join zy_unit zu on zr.unit_id = zu.unit_id
        LEFT join zy_room zm on zr.room_id = zm.room_id
        left Join zy_owner zo on zr.owner_id = zo.owner_id
        <where>
            <if test="zyOwnerRoom.roomStatus != null and zyOwnerRoom.roomStatus != ''">
                and zr.room_status like concat('%', #{zyOwnerRoom.roomStatus}, '%')
            </if>
        </where>
        <if test="size != 0">
            limit #{index},#{size}
        </if>
    </select>

    <select id="getCount" resultType="java.lang.Long">
        SELECT
        COUNT(*)
        FROM zy_owner_room zr
        LEFT JOIN zy_community zt ON zr.community_id = zt.community_id
        LEFT JOIN zy_building zb ON zr.building_id = zb.building_id
        left join zy_unit zu on zr.unit_id = zu.unit_id
        LEFT join zy_room zm on zr.room_id = zm.room_id
        left Join zy_owner zo on zr.owner_id = zo.owner_id
        <where>
            <if test="roomStatus != null and roomStatus != ''">
                and zr.room_status like concat('%', #{roomStatus}, '%')
            </if>
        </where>
    </select>



</mapper>

