<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.community.dao.SysUserDao">

    <resultMap type="com.example.community.entity.SysUser" id="SysUserMap">
        <result property="userId" column="user_id" jdbcType="INTEGER"/>
        <result property="deptId" column="dept_id" jdbcType="INTEGER"/>
        <result property="userName" column="user_name" jdbcType="VARCHAR"/>
        <result property="nickName" column="nick_name" jdbcType="VARCHAR"/>
        <result property="userType" column="user_type" jdbcType="VARCHAR"/>
        <result property="email" column="email" jdbcType="VARCHAR"/>
        <result property="phonenumber" column="phonenumber" jdbcType="VARCHAR"/>
        <result property="sex" column="sex" jdbcType="VARCHAR"/>
        <result property="avatar" column="avatar" jdbcType="VARCHAR"/>
        <result property="password" column="password" jdbcType="VARCHAR"/>
        <result property="status" column="status" jdbcType="VARCHAR"/>
        <result property="delFlag" column="del_flag" jdbcType="VARCHAR"/>
        <result property="loginIp" column="login_ip" jdbcType="VARCHAR"/>
        <result property="loginDate" column="login_date" jdbcType="TIMESTAMP"/>
        <result property="createBy" column="create_by" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateBy" column="update_by" jdbcType="VARCHAR"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="remark" column="remark" jdbcType="VARCHAR"/>
    </resultMap>

    <!-- 批量插入 -->
    <insert id="insertBatch" keyProperty="userId" useGeneratedKeys="true">
        insert into zy-community.sys_user(dept_id, user_name, nick_name, user_type, email, phonenumber, sex, avatar,
        password, status, del_flag, login_ip, login_date, create_by, create_time, update_by, update_time, remark)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.deptId}, #{entity.userName}, #{entity.nickName}, #{entity.userType}, #{entity.email},
            #{entity.phonenumber}, #{entity.sex}, #{entity.avatar}, #{entity.password}, #{entity.status},
            #{entity.delFlag}, #{entity.loginIp}, #{entity.loginDate}, #{entity.createBy}, #{entity.createTime},
            #{entity.updateBy}, #{entity.updateTime}, #{entity.remark})
        </foreach>
    </insert>
    <!-- 批量插入或按主键更新 -->
    <insert id="insertOrUpdateBatch" keyProperty="userId" useGeneratedKeys="true">
        insert into zy-community.sys_user(dept_id, user_name, nick_name, user_type, email, phonenumber, sex, avatar,
        password, status, del_flag, login_ip, login_date, create_by, create_time, update_by, update_time, remark)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.deptId}, #{entity.userName}, #{entity.nickName}, #{entity.userType}, #{entity.email},
            #{entity.phonenumber}, #{entity.sex}, #{entity.avatar}, #{entity.password}, #{entity.status},
            #{entity.delFlag}, #{entity.loginIp}, #{entity.loginDate}, #{entity.createBy}, #{entity.createTime},
            #{entity.updateBy}, #{entity.updateTime}, #{entity.remark})
        </foreach>
        on duplicate key update
        dept_id = values(dept_id) , user_name = values(user_name) , nick_name = values(nick_name) , user_type =
        values(user_type) , email = values(email) , phonenumber = values(phonenumber) , sex = values(sex) , avatar =
        values(avatar) , password = values(password) , status = values(status) , del_flag = values(del_flag) , login_ip
        = values(login_ip) , login_date = values(login_date) , create_by = values(create_by) , create_time =
        values(create_time) , update_by = values(update_by) , update_time = values(update_time) , remark =
        values(remark)
    </insert>
    <update id="updataUser">
        update sys_user
        <set>
            <if test="sysUser.nickName!=null">
                 nick_name = #{sysUser.nickName},
            </if>
            <if test="sysUser.phonenumber!=null">
                 phonenumber = #{sysUser.phonenumber},
            </if>
            <if test="sysUser.email!=null">
                 email = #{sysUser.email},
            </if>
            <if test="sysUser.sex!=null">
                 sex = #{sysUser.sex},
            </if>
            <if test="sysUser.password!=null">
                 password = #{sysUser.password},
            </if>
            <if test="sysUser.avatar!=null">
                avatar = #{sysUser.avatar}
            </if>
        </set>
        <if test="sysUser.userId!=null">
            where user_id=#{sysUser.userId}
        </if>
    </update>
    <update id="restUserPwd">
        update sys_user set password = #{pwd} where user_id=#{id}
    </update>

    <update id="upDataStatus">
         update sys_user set status = #{status} where user_id=#{id}
    </update>

    <resultMap id="UserInfo" type="com.example.community.dto.UserAndDeptAndRole" autoMapping="true">
        <id property="userId" column="userId"></id>
        <association property="sysRole" javaType="com.example.community.entity.SysRole" autoMapping="true">
            <id property="roleId" column="roleId"></id>
        </association>
        <collection property="sysDept" ofType="com.example.community.entity.SysDept" autoMapping="true">
            <id property="deptId" column="deptId"></id>
        </collection>
    </resultMap>
    <select id="getUserInfo" resultMap="UserInfo">
        SELECT u.*,r.role_name,d.dept_name,u.user_id userId,r.role_id roleId,d.dept_id deptId from sys_user u
            LEFT JOIN sys_user_role ur on u.user_id = ur.user_id
            LEFT JOIN sys_role r on ur.role_id = r.role_id
            LEFT JOIN sys_role_dept rd  on rd.role_id = r.role_id
            LEFT JOIN sys_dept d  on d.dept_id = rd.dept_id
        where u.user_id=#{id}
    </select>

<!--    u left join dept_id d on u.dept_id = d.dept_id-->


    <resultMap id="Userlist" type="com.example.community.dto.UserAndDeptAndRole" autoMapping="true">
        <id property="deptId" column="dept_id"></id>
        <collection property="sysDept" ofType="com.example.community.entity.SysDept" autoMapping="true">
            <id property="deptId" column="dept_id"></id>
        </collection>
    </resultMap>
    <select id="selUserlist" resultMap="Userlist">
        select sys_user.user_id,
        sys_user.user_name,sys_user.nick_name,
        sys_dept.dept_name,sys_user.phonenumber,
        sys_user.status,sys_user.create_time
        from sys_user inner join sys_dept on sys_user.dept_id = sys_dept.dept_id
        <where>
            <if test="sysUser.userId != null and sysUser.userId !=''">
                and user_id =#{sysUser.userId}
            </if>
            <if test="sysUser.userName != null and sysUser.userName !=''">
                and user_name like concat('%', #{sysUser.userName}, '%')
            </if>
            <if test="sysUser.nickName != null and sysUser.nickName !=''">
                and nick_name = #{sysUser.nickName}
            </if>
            <if test="sysUser.deptId != null and sysUser.deptId !=''">
                and sys_dept.dept_name = #{sysUser.deptId}
            </if>
            <if test="sysUser.phonenumber != null and sysUser.phonenumber !=''">
                and phonenumber like concat('%', #{sysUser.phonenumber}, '%')
            </if>
            <if test="sysUser.status != null and sysUser.status !=''">
                and status = #{sysUser.status}
            </if>
            <if test="sysUser.createTime != null and sysUser.createTime !=''">
                and DATE_FORMAT(sys_user.create_time, '%y%m%d') &gt; DATE_FORMAT(#{sysUser.createTime}, '%y%m%d')
            </if>
        </where>
        limit #{index},#{size}
    </select>

    <select id="count" resultType="java.lang.Long" >
        select count(*) from sys_user
        <where>
            <if test="userId != null and userId !=''">
                and user_id =#{userId}
            </if>
            <if test="userName != null and userName !=''">
                and user_name like concat('%', #{userName}, '%')
            </if>
            <if test="nickName != null and nickName !=''">
                and nick_name = #{nickName}
            </if>
            <if test="deptId != null and deptId !=''">
                and dept_id = #{deptId}
            </if>
            <if test="phonenumber != null and phonenumber !=''">
                and phonenumber like concat('%', #{phonenumber}, '%')
            </if>
            <if test="status != null and status !=''">
                and status = #{status}
            </if>
            <if test="createTime != null and createTime !=''">
                and DATE_FORMAT(create_time, '%y%m%d') &gt; DATE_FORMAT(#{createTime}, '%y%m%d')
            </if>
        </where>
    </select>




    <!--    <select id="selUserlist" resultMap="Userlist">-->
<!--        select * from sys_user-->
<!--        <where>-->
<!--            del_flag = '0'-->
<!--            <if test="userId != null and sysUser.userId !=''">-->
<!--                and user_id =#{sysUser.userId}-->
<!--            </if>-->
<!--            <if test="sysUser.userName != null and sysUser.userName !=''">-->
<!--                and user_name like concat('%', #{sysUser.userName}, '%')-->
<!--            </if>-->
<!--            <if test="sysUser.nickName != null and sysUser.nickName !=''">-->
<!--                and nick_name = #{sysUser.nickName}-->
<!--            </if>-->
<!--            <if test="sysUser.deptId != null and sysUser.deptId !=''">-->
<!--                and dept_id = #{sysUser.sysDept.deptName}-->
<!--            </if>-->
<!--            <if test="sysUser.phonenumber != null and sysUser.phonenumber !=''">-->
<!--                and phonenumber like concat('%', #{sysUser.phonenumber}, '%')-->
<!--            </if>-->
<!--            <if test="sysUser.status != null and sysUser.status !=''">-->
<!--                and status = #{sysUser.status}-->
<!--            </if>-->
<!--            <if test="sysUser.createTime != null and sysUser.createTime !=''">-->
<!--                and DATE_FORMAT(create_time, '%y%m%d') &gt; DATE_FORMAT(#{sysUser.createTime}, '%y%m%d')-->
<!--            </if>-->
<!--        </where>-->
<!--        limit #{index},#{size}-->
<!--    </select>-->


</mapper>

