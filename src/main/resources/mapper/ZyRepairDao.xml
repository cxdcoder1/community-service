<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.community.dao.ZyRepairDao">

    <resultMap type="com.example.community.entity.ZyRepair" id="ZyRepairMap">
        <result property="repairId" column="repair_id" jdbcType="INTEGER"/>
        <result property="repairNum" column="repair_num" jdbcType="VARCHAR"/>
        <result property="repairState" column="repair_state" jdbcType="VARCHAR"/>
        <result property="assignmentTime" column="assignment_time" jdbcType="TIMESTAMP"/>
        <result property="receivingOrdersTime" column="receiving_orders_time" jdbcType="TIMESTAMP"/>
        <result property="completeTime" column="complete_time" jdbcType="TIMESTAMP"/>
        <result property="cancelTime" column="cancel_time" jdbcType="TIMESTAMP"/>
        <result property="doorTime" column="door_time" jdbcType="TIMESTAMP"/>
        <result property="assignmentId" column="assignment_id" jdbcType="INTEGER"/>
        <result property="completeId" column="complete_id" jdbcType="INTEGER"/>
        <result property="completePhone" column="complete_phone" jdbcType="VARCHAR"/>
        <result property="completeName" column="complete_name" jdbcType="VARCHAR"/>
        <result property="remark" column="remark" jdbcType="VARCHAR"/>
        <result property="createBy" column="create_by" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateBy" column="update_by" jdbcType="VARCHAR"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="userId" column="user_id" jdbcType="INTEGER"/>
        <result property="delFlag" column="del_flag" jdbcType="INTEGER"/>
        <result property="repairContent" column="repair_content" jdbcType="VARCHAR"/>
        <result property="communityId" column="community_id" jdbcType="INTEGER"/>
        <result property="address" column="address" jdbcType="VARCHAR"/>
    </resultMap>

    <!-- 批量插入 -->
    <insert id="insertBatch" keyProperty="repairId" useGeneratedKeys="true">
        insert into zy-community.zy_repair(repair_num, repair_state, assignment_time, receiving_orders_time, complete_time, cancel_time, door_time, assignment_id, complete_id, complete_phone, complete_name, remark, create_by, create_time, update_by, update_time, user_id, del_flag, repair_content, community_id, address)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.repairNum}, #{entity.repairState}, #{entity.assignmentTime}, #{entity.receivingOrdersTime}, #{entity.completeTime}, #{entity.cancelTime}, #{entity.doorTime}, #{entity.assignmentId}, #{entity.completeId}, #{entity.completePhone}, #{entity.completeName}, #{entity.remark}, #{entity.createBy}, #{entity.createTime}, #{entity.updateBy}, #{entity.updateTime}, #{entity.userId}, #{entity.delFlag}, #{entity.repairContent}, #{entity.communityId}, #{entity.address})
        </foreach>
    </insert>
    <!-- 批量插入或按主键更新 -->
    <insert id="insertOrUpdateBatch" keyProperty="repairId" useGeneratedKeys="true">
        insert into zy-community.zy_repair(repair_num, repair_state, assignment_time, receiving_orders_time, complete_time, cancel_time, door_time, assignment_id, complete_id, complete_phone, complete_name, remark, create_by, create_time, update_by, update_time, user_id, del_flag, repair_content, community_id, address)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.repairNum}, #{entity.repairState}, #{entity.assignmentTime}, #{entity.receivingOrdersTime}, #{entity.completeTime}, #{entity.cancelTime}, #{entity.doorTime}, #{entity.assignmentId}, #{entity.completeId}, #{entity.completePhone}, #{entity.completeName}, #{entity.remark}, #{entity.createBy}, #{entity.createTime}, #{entity.updateBy}, #{entity.updateTime}, #{entity.userId}, #{entity.delFlag}, #{entity.repairContent}, #{entity.communityId}, #{entity.address})
        </foreach>
        on duplicate key update
         repair_num = values(repair_num) , repair_state = values(repair_state) , assignment_time = values(assignment_time) , receiving_orders_time = values(receiving_orders_time) , complete_time = values(complete_time) , cancel_time = values(cancel_time) , door_time = values(door_time) , assignment_id = values(assignment_id) , complete_id = values(complete_id) , complete_phone = values(complete_phone) , complete_name = values(complete_name) , remark = values(remark) , create_by = values(create_by) , create_time = values(create_time) , update_by = values(update_by) , update_time = values(update_time) , user_id = values(user_id) , del_flag = values(del_flag) , repair_content = values(repair_content) , community_id = values(community_id) , address = values(address)
        </insert>
    <!-- 根据条件更新数据 -->
    <update id="updateRepair" parameterType="com.example.community.entity.ZyRepair">
        UPDATE zy_repair
        <set>
            <if test="repairState != null">repair_state = #{repairState},</if>
            <if test="assignmentTime != null">assignment_time = #{assignmentTime},</if>
            <if test="receivingOrdersTime != null">receiving_orders_time = #{receivingOrdersTime},</if>
            <if test="completeTime != null">complete_time = #{completeTime},</if>
            <if test="cancelTime != null">cancel_time = #{cancelTime},</if>
            <if test="doorTime != null">door_time = #{doorTime},</if>
            <if test="assignmentId != null">assignment_id = #{assignmentId},</if>
            <if test="completeId != null">complete_id = #{completeId},</if>
            <if test="completePhone != null">complete_phone = #{completePhone},</if>
            <if test="completeName != null">complete_name = #{completeName},</if>
            <if test="remark != null">remark = #{remark},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="delFlag != null">del_flag = #{delFlag},</if>
            <if test="repairContent != null">repair_content = #{repairContent},</if>
            <if test="communityId != null">community_id = #{communityId},</if>
            <if test="address != null">address = #{address},</if>
        </set>
        WHERE repair_id = #{repairId}
    </update>
    <update id="deleteRepair">
        UPDATE zy_repair SET repair_state = 3,update_by = #{updateBy} ,cancel_time = #{date,jdbcType=TIMESTAMP} WHERE repair_id = #{repairId}
    </update>
    <update id="completeRepair">
        UPDATE zy_repair SET repair_state = 2 ,update_by = #{updateBy} ,complete_time = #{date,jdbcType=TIMESTAMP} WHERE repair_id = #{repairId}
    </update>
    <update id="reRepair">
        UPDATE zy_repair SET repair_state = 0 ,door_time = #{doorTime} ,update_by = #{updateBy} WHERE repair_id = #{repairId}
    </update>
    <select id="count" resultType="java.lang.Long">
        select count(*) from zy_repair zr join zy_owner zo on zr.user_id=zo.owner_id
        <where>
            <if test="zyRepairDto.repairState!=null and zyRepairDto.repairState!=''">
                and zr.repair_state=#{zyRepairDto.repairState}
            </if>
            <if test="zyRepairDto.ownerRealName!=null and zyRepairDto.ownerRealName!=''">
                and zo.owner_real_name=#{zyRepairDto.ownerRealName}
            </if>
            <if test="zyRepairDto.ownerPhoneNumber!=null and zyRepairDto.ownerPhoneNumber!=''">
                and zo.owner_phone_number=#{zyRepairDto.ownerPhoneNumber}
            </if>
        </where>
        and zr.community_id=#{id}
    </select>


    <select id="selectZyRepairDto" resultType="com.example.community.dto.ZyRepairDto">
        select * from zy_repair zr join zy_owner zo on zr.user_id=zo.owner_id
        <where>
            <if  test="zyRepairDto.repairState!=null and zyRepairDto.repairState!=''">
                and zr.repair_state=#{zyRepairDto.repairState}
            </if>
            <if  test="zyRepairDto.ownerRealName!=null and zyRepairDto.ownerRealName!=''">
                and zo.owner_real_name=#{zyRepairDto.ownerRealName}
            </if>
            <if  test="zyRepairDto.ownerPhoneNumber!=null and zyRepairDto.ownerPhoneNumber!=''">
                and zo.owner_phone_number=#{zyRepairDto.ownerPhoneNumber}
            </if>
            and  zr.community_id=#{id}
        </where>
        order by zr.create_time desc
        limit #{index},#{size}
    </select>
    <select id="selectAllRepairs" resultType="com.example.community.mini.dto.RepairDto">
        SELECT * FROM zy_repair where community_id =  #{communityId} and user_id = #{userId} and del_flag = 0
    </select>
    <select id="getUserList" resultType="com.example.community.entity.SysUser">
        SELECT *
        FROM sys_user
        WHERE dept_id IN (
            SELECT dept_id
            FROM sys_dept
            WHERE ancestors LIKE CONCAT('%', (SELECT DISTINCT zd.parent_id FROM
                zy_community zc
                    JOIN sys_dept zd ON zd.dept_id = zc.dept_id
                                              WHERE zc.community_id = #{id}), '%')
              AND ancestors LIKE CONCAT('%', (SELECT DISTINCT zd.dept_id FROM zy_community zc
                                                                                  JOIN sys_dept zd ON zd.dept_id = zc.dept_id
                                              WHERE zc.community_id = #{id}), '%')
              AND dept_name = '维修部门'
        )
          AND status = 0

    </select>
    <select id="selectDoorTime" resultType="java.lang.Integer">
        SELECT *
        FROM
        WHERE door_time = STR_TO_DATE(#{time}, '%Y-%m-%d %H:%i:%s');
    </select>
    <select id="getNumber" resultType="java.lang.String">
        select phonenumber from sys_user where user_name=#{name}
    </select>
    <select id="getZyRepairList" resultType="com.example.community.entity.ZyRepair">
        select + from zy_repair where repair_state='1'
    </select>


</mapper>

