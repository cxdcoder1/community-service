<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.community.dao.ZyCommunityDao">

    <resultMap type="com.example.community.entity.ZyCommunity" id="ZyCommunityMap">
        <result property="communityId" column="community_id" jdbcType="INTEGER"/>
        <result property="communityName" column="community_name" jdbcType="VARCHAR"/>
        <result property="communityCode" column="community_code" jdbcType="VARCHAR"/>
        <result property="communityProvenceCode" column="community_provence_code" jdbcType="VARCHAR"/>
        <result property="communityCityCode" column="community_city_code" jdbcType="VARCHAR"/>
        <result property="communityTownCode" column="community_town_code" jdbcType="VARCHAR"/>
        <result property="communityDetailedAddress" column="community_detailed_address" jdbcType="VARCHAR"/>
        <result property="communityLongitude" column="community_longitude" jdbcType="VARCHAR"/>
        <result property="communityLatitude" column="community_latitude" jdbcType="VARCHAR"/>
        <result property="deptId" column="dept_id" jdbcType="INTEGER"/>
        <result property="communitySort" column="community_sort" jdbcType="INTEGER"/>
        <result property="createBy" column="create_by" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateBy" column="update_by" jdbcType="VARCHAR"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="remark" column="remark" jdbcType="VARCHAR"/>
    </resultMap>

    <!-- 批量插入 -->
    <insert id="insertBatch" keyProperty="communityId" useGeneratedKeys="true">
        insert into zy-community.zy_community(community_name, community_code, community_provence_code, community_city_code, community_town_code, community_detailed_address, community_longitude, community_latitude, dept_id, community_sort, create_by, create_time, update_by, update_time, remark)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.communityName}, #{entity.communityCode}, #{entity.communityProvenceCode}, #{entity.communityCityCode}, #{entity.communityTownCode}, #{entity.communityDetailedAddress}, #{entity.communityLongitude}, #{entity.communityLatitude}, #{entity.deptId}, #{entity.communitySort}, #{entity.createBy}, #{entity.createTime}, #{entity.updateBy}, #{entity.updateTime}, #{entity.remark})
        </foreach>
    </insert>
    <!-- 批量插入或按主键更新 -->
    <insert id="insertOrUpdateBatch" keyProperty="communityId" useGeneratedKeys="true">
        insert into zy-community.zy_community(community_name, community_code, community_provence_code, community_city_code, community_town_code, community_detailed_address, community_longitude, community_latitude, dept_id, community_sort, create_by, create_time, update_by, update_time, remark)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.communityName}, #{entity.communityCode}, #{entity.communityProvenceCode}, #{entity.communityCityCode}, #{entity.communityTownCode}, #{entity.communityDetailedAddress}, #{entity.communityLongitude}, #{entity.communityLatitude}, #{entity.deptId}, #{entity.communitySort}, #{entity.createBy}, #{entity.createTime}, #{entity.updateBy}, #{entity.updateTime}, #{entity.remark})
        </foreach>
        on duplicate key update
         community_name = values(community_name) , community_code = values(community_code) , community_provence_code = values(community_provence_code) , community_city_code = values(community_city_code) , community_town_code = values(community_town_code) , community_detailed_address = values(community_detailed_address) , community_longitude = values(community_longitude) , community_latitude = values(community_latitude) , dept_id = values(dept_id) , community_sort = values(community_sort) , create_by = values(create_by) , create_time = values(create_time) , update_by = values(update_by) , update_time = values(update_time) , remark = values(remark)     </insert>

</mapper>

