<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.community.dao.SysOperLogDao">

    <resultMap type="com.example.community.entity.SysOperLog" id="SysOperLogMap">
        <result property="operId" column="oper_id" jdbcType="INTEGER"/>
        <result property="title" column="title" jdbcType="VARCHAR"/>
        <result property="businessType" column="business_type" jdbcType="INTEGER"/>
        <result property="method" column="method" jdbcType="VARCHAR"/>
        <result property="requestMethod" column="request_method" jdbcType="VARCHAR"/>
        <result property="operatorType" column="operator_type" jdbcType="INTEGER"/>
        <result property="operName" column="oper_name" jdbcType="VARCHAR"/>
        <result property="deptName" column="dept_name" jdbcType="VARCHAR"/>
        <result property="operUrl" column="oper_url" jdbcType="VARCHAR"/>
        <result property="operIp" column="oper_ip" jdbcType="VARCHAR"/>
        <result property="operLocation" column="oper_location" jdbcType="VARCHAR"/>
        <result property="operParam" column="oper_param" jdbcType="VARCHAR"/>
        <result property="jsonResult" column="json_result" jdbcType="VARCHAR"/>
        <result property="status" column="status" jdbcType="INTEGER"/>
        <result property="errorMsg" column="error_msg" jdbcType="VARCHAR"/>
        <result property="operTime" column="oper_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!-- 批量插入 -->
    <insert id="insertBatch" keyProperty="operId" useGeneratedKeys="true">
        insert into zy-community.sys_oper_log(title, business_type, method, request_method, operator_type, oper_name, dept_name, oper_url, oper_ip, oper_location, oper_param, json_result, status, error_msg, oper_time)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.title}, #{entity.businessType}, #{entity.method}, #{entity.requestMethod}, #{entity.operatorType}, #{entity.operName}, #{entity.deptName}, #{entity.operUrl}, #{entity.operIp}, #{entity.operLocation}, #{entity.operParam}, #{entity.jsonResult}, #{entity.status}, #{entity.errorMsg}, #{entity.operTime})
        </foreach>
    </insert>
    <!-- 批量插入或按主键更新 -->
    <insert id="insertOrUpdateBatch" keyProperty="operId" useGeneratedKeys="true">
        insert into zy-community.sys_oper_log(title, business_type, method, request_method, operator_type, oper_name, dept_name, oper_url, oper_ip, oper_location, oper_param, json_result, status, error_msg, oper_time)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.title}, #{entity.businessType}, #{entity.method}, #{entity.requestMethod}, #{entity.operatorType}, #{entity.operName}, #{entity.deptName}, #{entity.operUrl}, #{entity.operIp}, #{entity.operLocation}, #{entity.operParam}, #{entity.jsonResult}, #{entity.status}, #{entity.errorMsg}, #{entity.operTime})
        </foreach>
        on duplicate key update
         title = values(title) , business_type = values(business_type) , method = values(method) , request_method = values(request_method) , operator_type = values(operator_type) , oper_name = values(oper_name) , dept_name = values(dept_name) , oper_url = values(oper_url) , oper_ip = values(oper_ip) , oper_location = values(oper_location) , oper_param = values(oper_param) , json_result = values(json_result) , status = values(status) , error_msg = values(error_msg) , oper_time = values(oper_time)     </insert>

    <insert id="insertSysOperLog"  parameterType="com.example.community.entity.SysOperLog">
        INSERT INTO sys_oper_log
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="title != null">
                title,
            </if>
            <if test="businessType != null">
                business_type,
            </if>
            <if test="method != null">
                method,
            </if>
            <if test="requestMethod != null">
                request_method,
            </if>
            <if test="operatorType != null">
                operator_type,
            </if>
            <if test="operName != null">
                oper_name,
            </if>
            <if test="deptName != null">
                dept_name,
            </if>
            <if test="operUrl != null">
                oper_url,
            </if>
            <if test="operIp != null">
                oper_ip,
            </if>
            <if test="operLocation != null">
                oper_location,
            </if>
            <if test="operParam != null">
                oper_param,
            </if>
            <if test="jsonResult != null">
                json_result,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="errorMsg != null">
                error_msg,
            </if>
            <if test="operTime != null">
                oper_time,
            </if>
        </trim>
        VALUES
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="title != null">
                #{title},
            </if>
            <if test="businessType != null">
                #{businessType},
            </if>
            <if test="method != null">
                #{method},
            </if>
            <if test="requestMethod != null">
                #{requestMethod},
            </if>
            <if test="operatorType != null">
                #{operatorType},
            </if>
            <if test="operName != null">
                #{operName},
            </if>
            <if test="deptName != null">
                #{deptName},
            </if>
            <if test="operUrl != null">
                #{operUrl},
            </if>
            <if test="operIp != null">
                #{operIp},
            </if>
            <if test="operLocation != null">
                #{operLocation},
            </if>
            <if test="operParam != null">
                #{operParam},
            </if>
            <if test="jsonResult != null">
                #{jsonResult},
            </if>
            <if test="status != null">
                #{status},
            </if>
            <if test="errorMsg != null">
                #{errorMsg},
            </if>
            <if test="operTime != null">
                #{operTime},
            </if>
        </trim>
    </insert>
    <delete id="deletesOperLog">
        delete from sys_oper_log where oper_id in
        <foreach collection="ids" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>
    <delete id="dels">
        delete from sys_oper_log
    </delete>

    <select id="selectSysoperLog" resultType="com.example.community.dto.OperLogDto">
        select * from sys_oper_log
        <where>
            <if test="operLogDto.title != null and operLogDto.title !=''">
                and title like concat('%',#{operLogDto.title},'%')
            </if>
            <if test="operLogDto.operName != null and operLogDto.operName !=''">
                and oper_name like concat('%',#{operLogDto.operName},'%')
            </if>
            <if test="operLogDto.businessType != null and operLogDto.businessType !=''">
                and business_type like concat('%',#{operLogDto.businessType},'%')
            </if>
            <if test="operLogDto.status != null and operLogDto.status !=''">
                and status =#{operLogDto.status}
            </if>
            <if test="operLogDto.createTime !=null and  operLogDto.createTime!='' and operLogDto.operTime!=null and operLogDto.operTime!=''">
                and oper_time &gt;= #{operLogDto.createTime}
                and oper_time &lt;=#{operLogDto.operTime}
            </if>
        </where>
        order by oper_id desc
        limit #{index},#{size}
    </select>
    <select id="count" resultType="java.lang.Integer">
        select  count(*)  from sys_oper_log
        <where>
            <if test="title != null and title !=''">
                and title like concat('%',#{title},'%')
            </if>
            <if test="operName != null and operName !=''">
                and oper_name like concat('%',#{operName},'%')
            </if>
            <if test="businessType != null and businessType !=''">
                and business_type like concat('%',#{businessType},'%')
            </if>
            <if test="status != null and status !=''">
                and status = #{status}
            </if>
            <if test="createTime !=null and  createTime!='' and operTime!=null and operTime!=''">
                and oper_time &gt;= #{createTime}
                and oper_time &lt;=#{operTime}
            </if>
        </where>
    </select>
    <select id="statusOption" resultType="com.example.community.entity.SysDictData">
        select * from sys_dict_data dd join sys_dict_type dt on dd.dict_type = dt.dict_type where dt.dict_id = 10 and dt.status = "0"
    </select>
    <select id="operTypeList" resultType="com.example.community.entity.SysDictData">
        select * from sys_dict_data dd join sys_dict_type dt on dd.dict_type = dt.dict_type where dt.dict_id = 9 and dt.status = "0"
    </select>
    <select id="getOperLog" resultType="com.example.community.entity.SysOperLog">
        select * from sys_oper_log where oper_id=#{id}
    </select>
    <select id="getOperLogList" resultType="com.example.community.entity.SysOperLog">
        SELECT * FROM sys_oper_log WHERE oper_id != 1
        <if test="list!=null">
            and
            oper_id in
            <foreach collection="list" item="num" index="index" open="(" close=")" separator=",">
                #{num}
            </foreach>
        </if>
    </select>

</mapper>

