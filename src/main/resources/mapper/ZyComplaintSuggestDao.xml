<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.community.dao.ZyComplaintSuggestDao">

    <resultMap type="com.example.community.entity.ZyComplaintSuggest" id="ZyComplaintSuggestMap">
        <result property="complaintSuggestId" column="complaint_suggest_id" jdbcType="INTEGER"/>
        <result property="communityId" column="community_id" jdbcType="INTEGER"/>
        <result property="complaintSuggestType" column="complaint_suggest_type" jdbcType="VARCHAR"/>
        <result property="complaintSuggestContent" column="complaint_suggest_content" jdbcType="VARCHAR"/>
        <result property="createBy" column="create_by" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateBy" column="update_by" jdbcType="VARCHAR"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="remark" column="remark" jdbcType="VARCHAR"/>
        <result property="userId" column="user_id" jdbcType="INTEGER"/>
    </resultMap>

    <!-- 批量插入 -->
    <insert id="insertBatch" keyProperty="complaintSuggestId" useGeneratedKeys="true">
        insert into zy-community.zy_complaint_suggest(community_id, complaint_suggest_type, complaint_suggest_content, create_by, create_time, update_by, update_time, remark, user_id)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.communityId}, #{entity.complaintSuggestType}, #{entity.complaintSuggestContent}, #{entity.createBy}, #{entity.createTime}, #{entity.updateBy}, #{entity.updateTime}, #{entity.remark}, #{entity.userId})
        </foreach>
    </insert>
    <!-- 批量插入或按主键更新 -->
    <insert id="insertOrUpdateBatch" keyProperty="complaintSuggestId" useGeneratedKeys="true">
        insert into zy-community.zy_complaint_suggest(community_id, complaint_suggest_type, complaint_suggest_content, create_by, create_time, update_by, update_time, remark, user_id)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.communityId}, #{entity.complaintSuggestType}, #{entity.complaintSuggestContent}, #{entity.createBy}, #{entity.createTime}, #{entity.updateBy}, #{entity.updateTime}, #{entity.remark}, #{entity.userId})
        </foreach>
        on duplicate key update
         community_id = values(community_id) , complaint_suggest_type = values(complaint_suggest_type) , complaint_suggest_content = values(complaint_suggest_content) , create_by = values(create_by) , create_time = values(create_time) , update_by = values(update_by) , update_time = values(update_time) , remark = values(remark) , user_id = values(user_id)     </insert>
    <update id="updateRemark">
        UPDATE zy_complaint_suggest
        <set>
            <if test="remark != null">
                remark=#{remark},
            </if>
        </set>
        WHERE complaint_suggest_Id=#{id}
    </update>
    <select id="count" resultType="java.lang.Long">
        select count(*) from zy_complaint_suggest zcs
        JOIN zy_owner zy on zcs.user_id=zy.owner_id
        join zy_files zf on zcs.user_id=zf.user_id
        <where>
            <if test="zyComplaintSuggestDto.complaintSuggestType!=null and zyComplaintSuggestDto.complaintSuggestType !=''">
                and zcs.complaint_suggest_type=#{zyComplaintSuggestDto.complaintSuggestType}
            </if>
                and zcs.community_id=#{id}
        </where>
    </select>
    <select id="selectzyComplaintSuggestDto" resultType="com.example.community.dto.ZyComplaintSuggestDto">
        select zcs.complaint_suggest_id,zcs.complaint_suggest_type,zcs.complaint_suggest_content,zcs.create_by,zy.owner_phone_number,zcs.create_time ,zcs.remark
        ,zf.files_url
        from zy_complaint_suggest zcs
        LEFT JOIN zy_owner zy on zcs.user_id=zy.owner_id
        LEFT join zy_files zf on zcs.complaint_suggest_id=zf.parent_id
        <where>
            <if test="zyComplaintSuggestDto.complaintSuggestType!=null and zyComplaintSuggestDto.complaintSuggestType !=''">
                and zcs.complaint_suggest_type=#{zyComplaintSuggestDto.complaintSuggestType}
            </if>
            and zcs.community_id=#{id}
        </where>
        limit #{index},#{size}
    </select>
    <select id="getExSuggestList" resultType="com.example.community.dto.ExSuggest">
        select zcs.complaint_suggest_id,zcs.complaint_suggest_type,zcs.complaint_suggest_content,zcs.create_by,zy.owner_phone_number,zcs.create_time ,zcs.remark
             ,zf.files_url
        from zy_complaint_suggest zcs
        LEFT JOIN zy_owner zy on zcs.user_id=zy.owner_id
        LEFT join zy_files zf on zcs.complaint_suggest_id=zf.parent_id
        where zcs.complaint_suggest_id!=1
        <if test="list!=null">
            and
            zcs.complaint_suggest_id in
            <foreach collection="list" item="num" index="index" open="(" close=")" separator=",">
                #{num}
            </foreach>
        </if>
    </select>
    <insert id="insertBySuggest">
        INSERT INTO zy_complaint_suggest
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="complaintSuggestId != null">complaint_suggest_id,</if>
            <if test="communityId != null">community_id,</if>
            <if test="complaintSuggestType != null">complaint_suggest_type,</if>
            <if test="complaintSuggestContent != null">complaint_suggest_content,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="remark != null">remark,</if>
            <if test="userId != null">user_id,</if>
        </trim>
        <trim prefix="VALUES (" suffix=")" suffixOverrides=",">
            <if test="complaintSuggestId != null">#{complaintSuggestId},</if>
            <if test="communityId != null">#{communityId},</if>
            <if test="complaintSuggestType != null">#{complaintSuggestType},</if>
            <if test="complaintSuggestContent != null">#{complaintSuggestContent},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="remark != null">#{remark},</if>
            <if test="userId != null">#{userId},</if>
        </trim>
    </insert>
    <insert id="insertFiles">
        insert into zy_files

            <trim prefix="(" suffix=")" suffixOverrides=",">
                files_id,files_url,source,user_id,parent_id,remark
            </trim>

        values
        <foreach collection="files" item="entity" separator=",">
            <trim prefix="(" suffix=")" suffixOverrides=",">
                #{entity.filesId},
                <if test="entity.filesUrl != null and entity.filesUrl != ''">
                    #{entity.filesUrl},
                </if>
                <if test="entity.updateBy != null and entity.updateBy != ''">
                    #{entity.updateBy},
                </if>
                <if test="entity.createBy != null and entity.createBy != ''">
                    #{entity.createBy},
                </if>
                <if test="entity.delFlag != null and entity.delFlag != ''">
                    #{entity.delFlag},
                </if>
                <if test="entity.source != null ">
                    #{entity.source},
                </if>
                <if test="entity.userId != null and entity.userId != ''">
                    #{entity.userId},
                </if>
                <if test="entity.parentId != null and entity.parentId != ''">
                    #{entity.parentId},
                </if>
                <if test="entity.remark != null and entity.remark != ''">
                    #{entity.remark},
                </if>


                <if test="entity.createTime != null ">
                    #{entity.createTime},
                </if>
            </trim>
        </foreach>
    </insert>
    <select id="getSuggestions" resultType="com.example.community.entity.ZyComplaintSuggest">
        SELECT * from zy_complaint_suggest where community_id = #{communityId} and user_id = #{userId}
    </select>

</mapper>

